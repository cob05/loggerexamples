version: 1
disable_existing_loggers: true

formatters:
  standard:
    format: "%(asctime)s %(levelname)s - [%(filename)s: line %(lineno)s] - %(funcName)s - %(message)s"
  error:
    format: "%(asctime)s - %(levelname)s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s"

filters:
  InfoFilter:
      (): logconfig.logconfig.InfoFilter # path to class
  DebugFilter:
      (): logconfig.logconfig.DebugFilter # path to class
  WarnFilter:
      (): logconfig.logconfig.WarnFilter # path to class
  ErrorFilter:
      (): logconfig.logconfig.ErrorFilter # path to class
  CriticalFilter:
      (): logconfig.logconfig.CriticalFilter # path to class

handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG # lowest level up to CRITICAL output to stdout
    formatter: standard
    stream: ext://sys.stdout

  debug_file_handler:
    class: logging.handlers.TimedRotatingFileHandler
    level: DEBUG
    formatter: standard
    filename:  src/logfiles/10_debug.log
    filters: [DebugFilter]
    encoding: utf8
    backupCount: 20

  info_file_handler:
    class: logging.handlers.TimedRotatingFileHandler
    level: INFO
    formatter: standard
    filename: src/logfiles/20_info.log
    backupCount: 4
    filters: [InfoFilter]
    encoding: utf8

  warn_file_handler:
    class: logging.handlers.TimedRotatingFileHandler
    level: WARN
    formatter: standard
    filename: src/logfiles/30_warn.log
    filters: [WarnFilter]
    encoding: utf8
    backupCount: 20

  error_file_handler:
    class: logging.handlers.TimedRotatingFileHandler
    level: ERROR
    formatter: error
    filename: src/logfiles/40_errors.log
    filters: [ErrorFilter]
    encoding: utf8
    backupCount: 20

  critical_file_handler:
    class: logging.handlers.TimedRotatingFileHandler
    level: CRITICAL
    formatter: standard
    filename: src/logfiles/50_critical.log
    filters: [CriticalFilter]
    encoding: utf8
    backupCount: 20
  
  root_file_handler:
    class: logging.FileHandler
    level: DEBUG
    formatter: standard
    filename: src/logfiles/root.log
    mode: 'w' # root.log set to overwrite everytime

root:
  level: DEBUG
  handlers: [console, debug_file_handler, info_file_handler, warn_file_handler, error_file_handler, critical_file_handler, root_file_handler]